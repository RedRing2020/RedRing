name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build & Test (matrix)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature-set: [default, strict]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: |
          if [ "${{ matrix.feature-set }}" = "strict" ]; then
            # Deny deprecated symbols globally
            export RUSTFLAGS="-D deprecated"
            cargo build --workspace --all-targets
          else
            cargo build --workspace --all-targets
          fi
      - name: Clippy (deny warnings)
        run: |
          if [ "${{ matrix.feature-set }}" = "strict" ]; then
            export RUSTFLAGS="-D deprecated"
          fi
          cargo clippy --workspace --all-targets -- -D warnings
      - name: Test
        run: |
          if [ "${{ matrix.feature-set }}" = "strict" ]; then
            export RUSTFLAGS="-D deprecated"
            cargo test --workspace
          else
            cargo test --workspace
          fi
      - name: Format check
        if: matrix.feature-set == 'default' || matrix.feature-set == 'strict'
        run: cargo fmt -- --check

  deprecated-scan:
    name: Deprecated Import Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Scan for forbidden geo_core 3D primitive imports
        run: |
          set -e
          # forbid new direct core 3D primitive imports outside geo_core
          ! grep -R "use geo_core::LineSegment3D" -n --exclude-dir target --exclude-dir geo_core || (echo "Forbidden geo_core::LineSegment3D import" && exit 1)
          ! grep -R "use geo_core::Plane" -n --exclude-dir target --exclude-dir geo_core || (echo "Forbidden geo_core::Plane import" && exit 1)
          ! grep -R "use geo_core::Direction3D" -n --exclude-dir target --exclude-dir geo_core || (echo "Forbidden geo_core::Direction3D import" && exit 1)
