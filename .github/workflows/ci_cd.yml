name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# GitHub Pages デプロイ用の権限設定
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build & Test (matrix)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature-set: [default, strict]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: |
          if [ "${{ matrix.feature-set }}" = "strict" ]; then
            # Deny deprecated symbols globally
            export RUSTFLAGS="-D deprecated"
            cargo build --workspace --all-targets
          else
            cargo build --workspace --all-targets
          fi
      - name: Clippy (deny warnings)
        run: |
          if [ "${{ matrix.feature-set }}" = "strict" ]; then
            export RUSTFLAGS="-D deprecated"
          fi
          cargo clippy --workspace --all-targets -- -D warnings
      - name: Test
        run: |
          if [ "${{ matrix.feature-set }}" = "strict" ]; then
            export RUSTFLAGS="-D deprecated"
            cargo test --workspace
          else
            cargo test --workspace
          fi
      - name: Format check
        if: matrix.feature-set == 'default' || matrix.feature-set == 'strict'
        run: cargo fmt -- --check

  foundation-architecture-scan:
    name: Foundation Architecture Compliance Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Core/Extension Foundation Pattern Compliance
        run: |
          set -e
          echo "Checking Core/Extension Foundation pattern compliance..."

          # 1. 禁止: geo_primitives 外からの直接プリミティブインポート
          echo "Checking for forbidden direct primitive imports..."
          ! grep -R "use geo_primitives::" -n --exclude-dir target --exclude-dir geo_primitives --exclude-dir .github . || (echo "Forbidden direct geo_primitives import outside geo_primitives crate" && exit 1)

          # 2. 禁止: Core Foundation を経由しない低レベルアクセス
          echo "Checking for deprecated low-level geometry access..."
          ! grep -R "use geo_core::" -n --exclude-dir target --exclude-dir geo_core --exclude-dir .github . || (echo "Deprecated geo_core direct import - use geo_foundation instead" && exit 1)

          # 3. 推奨: geo_foundation 経由のアクセスパターン
          echo "Checking foundation-based access patterns..."
          # geo_foundation からのインポートは許可（推奨パターン）
          grep -R "use geo_foundation::" -n --exclude-dir target --exclude-dir .github . > foundation_imports.txt || true
          if [ -s foundation_imports.txt ]; then
            echo "✅ Found proper foundation-based imports:"
            head -5 foundation_imports.txt
          fi

          # 4. 禁止: 旧 geometry モジュールの使用
          echo "Checking for deprecated geometry module usage..."
          ! grep -R "use.*geometry::" -n --exclude-dir target --exclude-dir .github --exclude "*.md" . | grep -v "geo_foundation\|geo_primitives" || (echo "Deprecated geometry module usage - migrate to geo_foundation/geo_primitives" && exit 1)

          echo "✅ Foundation architecture compliance check passed!"

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    # Only deploy on pushes to develop branch (not PRs or main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    # Wait for build-test job to complete successfully
    needs: [build-test, foundation-architecture-scan]
    
    # GitHub Pages デプロイ環境設定
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'

      - name: Build documentation
        run: mdbook build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
